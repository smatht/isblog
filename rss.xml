<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Matias G. Sticchi [Ingenieria de Software I]</title><link>http://getnikola.com/</link><description>Blog hecho con Nikola (python) de Matias Sticchi destinado a la materia Ingenieria del Software I de la carrera Licenciatura en Sistemas de Informacion</description><atom:link href="http://getnikola.com/rss.xml" type="application/rss+xml" rel="self"></atom:link><language>es</language><lastBuildDate>Sun, 10 May 2015 23:37:19 GMT</lastBuildDate><generator>http://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Ingeniería de Requerimientos en plataformas colaborativas</title><link>http://getnikola.com/blog/ingenieria-de-requerimientos-en-plataformas-colaborativas.html</link><dc:creator>Matias Sticchi</dc:creator><description>&lt;div&gt;&lt;p&gt;Me gustaria dar mi opinion sobre el tema del titulo de este post, pero primero voy separar algunas definiciones y conceptos para que quede todo en su lugar.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://getnikola.com/images/branching.png" alt="Branching" title="Control de versiones" width="400" height="400"&gt;&lt;/p&gt;
&lt;p&gt;Git es un sistema de control de versiones al igual que Mercurial y Subversion, entre otros. La idea principal de un sistema de control de versiones es administrar los cambios en los archivos que componen el proyecto de software que se está desarrollando y mantener un historial de las versiones por la que va pasando un producto, de modo que puede ser muy bien identificada la persona o grupo de trabajo que hace un cambio sobre un archivo especifico permitiendo manejar el flujo de trabajo de una manera óptima.&lt;/p&gt;
&lt;p&gt;Entonces sabiendo lo que es un sistema de control de versiones podemos decir que Github, al igual Bitbucket, son plataformas colaborativas para el desarrollo de software. Con estas herramientas se pueden acceder y colaborar en repositorios de software, formar parte de una comunidad de desarrollo, informar fallos o necesidad de nuevas funcionalidades mediante issues, distribuir software de codigo abierto.&lt;/p&gt;
&lt;h4&gt;Administrando cambios en los Requerimientos con plataformas colaborativas&lt;/h4&gt;
&lt;p&gt;A lo largo del ciclo de vida de un proyecto de software, los productos de software evolucionan. Desde la concepción del producto y la captura de requisitos inicial hasta la puesta en producción del mismo, se van realizando una serie de cambios, tanto en el código como en la documentación asociada.&lt;/p&gt;
&lt;p&gt;Cada proyecto debe contar con un responsable, o grupo, de gestión de cambios, tanto de los requerimientos de software como de configuraciones de aplicación y cambios en el código fuente. &lt;/p&gt;
&lt;p&gt;Una solicitud de cambio podría seguir los siguientes pasos y niveles de aprobación:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Identificar y formalizar la solicitud de cambio mediante issues en plataformas como Github en el repositorio correspondiente al proyecto. Recordemos que la issue puede ser de tipo nueva funcionalidad, bug o extensión de funcionalidad.&lt;/li&gt;
&lt;li&gt;Valoración de la solicitud por el grupo encargado de gestión de cambios, creación de informe de valoración que puede contener, complejidad del cambio, impacto en la arquitectura del software y costos de desarrollo.&lt;/li&gt;
&lt;li&gt;Aprobación técnica de la solicitud de cambio, encargado al arquitecto del sistema.&lt;/li&gt;
&lt;li&gt;Aprobación funcional y contractual. Responsabilidad de jefe de proyecto, clientes y dueño de producto.&lt;/li&gt;
&lt;li&gt;Implementación del cambio.&lt;/li&gt;
&lt;li&gt;Pruebas y validaciones.&lt;/li&gt;
&lt;li&gt;Actualización de las bases documentales.&lt;/li&gt;
&lt;li&gt;Integración del cambio al repositorio de software.&lt;/li&gt;
&lt;li&gt;Implantación del cambio en producción.&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;CONCLUSIONES DEL TEMA&lt;/h4&gt;
&lt;p&gt;El sistema de control de versiones y plataformas como Github o Bitbucket han surgido para hacer seguimiento en los cambios del código fuente de un programa y crear un flujo de trabajo colaborativo, pero hoy en dia estas funcionalidades se han expandido hasta la documentación y porque no, los requerimientos del software, administrando los cambios que se realizan en los mismos. &lt;/p&gt;
&lt;p&gt;Por ejemplo &lt;a href="http://doc.perl6.org/" title="Perl 6"&gt;Perl 6&lt;/a&gt; usa &lt;a href="https://github.com/perl6/doc" title="Perl 6 doc"&gt;github para mantener la documentación&lt;/a&gt; de su lenguaje de programación.&lt;/p&gt;
&lt;p&gt;Yendo un poco mas lejos mediante el uso de esta tecnologia se pueden escribir libros y manejar los cambios y el historial de las diferentes ediciones de una forma segura.&lt;/p&gt;
&lt;p&gt;Libro escrito en LaTex mantenido en Github: &lt;a href="https://github.com/HoTT/book" title="Libro"&gt;https://github.com/HoTT/book&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Las herramientas estan ahi al alcance de nosotros, lo unico que tenemos que hacer es tomarlas usarlas.&lt;/p&gt;
&lt;h5&gt;Bibliografia consultada&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;Junio Hamano, Linus Torvalds (2015). Git local-branching-on-the-cheap. Recuperado de &lt;a href="http://git-scm.com/" title="Git"&gt;http://git-scm.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;WDS, Strategic Software Solutions (2014). Procedimiento de control de versiones y gestión del cambio. Recuperado de &lt;a href="http://es.slideshare.net/openerpquito" title="WDS"&gt;http://es.slideshare.net/openerpquito&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Pressman (2005). Ingeniería del software, un enfoque practico. Mc Graw Hill.&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</description><guid>http://getnikola.com/blog/ingenieria-de-requerimientos-en-plataformas-colaborativas.html</guid><pubDate>Sun, 10 May 2015 21:22:32 GMT</pubDate></item><item><title>Sistema de Gestion de Curriculums - DFD</title><link>http://getnikola.com/blog/sistema-de-gestion-de-curriculums-dfd.html</link><dc:creator>Matias Sticchi</dc:creator><description>&lt;div&gt;&lt;h4&gt;Enunciado del sistema:&lt;/h4&gt;
&lt;p&gt;El Sistema de Gestor de Currículum será el responsable de gestionar los Currículum de los
Trabajadores de la Empresa. La aplicación será capaz de almacenar información referente a la
formación del personal, y que sea susceptible de ser utilizada por la empresa en la labor de
búsqueda de perfiles para sus Proyectos. Los propios Trabajadores serán los que mantengan su
currículum, y el Gerente será capaz de consultarlos desde cualquier lugar donde se encuentre,
por lo que sería muy recomendable que la arquitectura de la aplicación sea web.&lt;/p&gt;
&lt;h4&gt;Diagrama de contexto:&lt;/h4&gt;
&lt;p&gt;El diagrama de contexto representa la vista de más alto nivel del sistema permitiendo visualizar sus principales interfaces.&lt;/p&gt;
&lt;p&gt;&lt;img alt="diagrama de contexto" src="http://getnikola.com/images/context.jpg" title="Diagrama de contexto"&gt;&lt;/p&gt;
&lt;h4&gt;Diagrama de nivel 1:&lt;/h4&gt;
&lt;p&gt;&lt;img alt="diagrama de nivel 1" src="http://getnikola.com/images/level1.jpg" title="Diagrama de primer nivel"&gt;&lt;/p&gt;&lt;/div&gt;</description><category>dfd</category><category>ejercicio</category><category>practico</category><guid>http://getnikola.com/blog/sistema-de-gestion-de-curriculums-dfd.html</guid><pubDate>Thu, 23 Apr 2015 01:43:57 GMT</pubDate></item><item><title>(primer post) Porqué Nikola Static Site and Blog Generator?</title><link>http://getnikola.com/blog/porque-nikola-static-site-and-blog-generator.html</link><dc:creator>Matias Sticchi</dc:creator><description>&lt;div&gt;&lt;div class="figure"&gt;
&lt;a class="reference external image-reference" href="http://farm1.staticflickr.com/138/352972944_4f9d568680_z.jpg?zz=1"&gt;&lt;img alt="Nikola Tesla Corner by nicwest, on Flickr" class="thumbnail" src="http://farm1.staticflickr.com/138/352972944_4f9d568680.jpg"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Nikola es un generador de blog estático, cada post y cada pagina del sitio se encuentran en un archivo
html separado. Tampoco usa base de datos ni configuraciones complicadas en el servidor web.&lt;/p&gt;
&lt;p&gt;Un sitio web estático es más seguro, utiliza menos recursos y no es necesario actualizar el framework en
cada release.&lt;/p&gt;
&lt;p&gt;Para empezar de la mejor manera a crear blogs, sitios personales, sitio para la presentacion de un proyecto
de software, etc. se puede empezar leyendo el &lt;a class="reference external" href="http://getnikola.com/handbook.html"&gt;Handbook&lt;/a&gt; de Nikola, luego ya queda en tu imaginación lo que puedas hacer con el.&lt;/p&gt;
&lt;p&gt;Existen &lt;a class="reference external" href="http://themes.getnikola.com/"&gt;temas&lt;/a&gt; ya desarrollados listos para usarlos o podes crear tus &lt;a class="reference external" href="http://getnikola.com/theming.html"&gt;propios temas.&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</description><category>motor</category><category>nikola</category><category>tecnologia</category><guid>http://getnikola.com/blog/porque-nikola-static-site-and-blog-generator.html</guid><pubDate>Tue, 21 Apr 2015 14:07:41 GMT</pubDate></item></channel></rss>